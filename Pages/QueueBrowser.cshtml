@page
@model QueueBrowserModel
@{
    ViewData["Title"] = "Queue Browser";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
</head>

<body>
    <div class="container">
        <h1>@ViewData["Title"]</h1>

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger" role="alert">
                @TempData["ErrorMessage"]
                @if (TempData["ErrorInfo"] != null)
                {
                    <p>Return Code: @TempData["ErrorInfo"]</p>
                }
            </div>
        }

        <form method="post">
            <div class="input-container">
                <label for="host">Host (use tcps:// for TLS connection):</label>
                <input type="text" id="host" name="host" value="@TempData["Host"]"/>
            </div>
            <div class="input-container">
                <label for="vpn">VPN:</label>
                <input type="text" id="vpn" name="vpn" value="@TempData["VPN"]"/>
            </div>
            <div class="input-container">
                <label for="queue">Queue:</label>
                <input type="text" id="queue" name="queue" value="@TempData["Queue"]"/>
            </div>
            <div class="input-container">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" value="@TempData["Username"]"/>
            </div>
            <div class="input-container">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" value="@TempData["Password"]"/>
            </div>
            <div id="overlay"
                    style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); z-index: 9999; display: none;">
            </div>
            <button type="submit">Browse Queue</button>
            <button id="resetButton" style="display:none;" type="button">Reset</button>
        </form>

        <h2>Output</h2>

        <table>
            <thead>
                <tr>
                    <th>#</th>
                    <th>Toggle</th>
                    <th>Message ID</th>
                    <th>Date/Time</th>
                    <th>Destination</th>
                    <th>Application Message ID</th>
                    <th>Sender ID</th>
                    <th>Message Type</th>
                    <th>Correlation ID</th>
                    <th>Delivery Mode</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody id="tableBody">
                @if (Model.Output.OutputData != null)
                {
                    @for (int i = 0; i < Model.Output.OutputData.Count; i++)
                    {
                        var messageInfo = Model.Output.OutputData[i];
                        <tr class="message-row" data-id="@messageInfo.ADMessageId">
                            <td>@(i + 1)</td>
                            <td>
                                <span class="toggle-icon" data-id="@messageInfo.ADMessageId">â†’</span>
                            </td>
                            <td>@messageInfo.ADMessageId</td>
                            <td>@messageInfo.FormattedDateTime</td>
                            <td>@messageInfo.DestinationName</td>
                            <td>@messageInfo.ApplicationMessageId</td>
                            <td>@messageInfo.SenderId</td>
                            <td>@messageInfo.ApplicationMessageType</td>
                            <td>@messageInfo.CorrelationId</td>
                            <td>@messageInfo.DeliveryMode</td>
                            <td>
                                <button class="delete-button"
                                    onclick="removeMessage(@Model.Output.OutputData[i].ADMessageId, document.getElementById('queue').value)">Delete</button>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="11" style="max-width: 50vw;">
                                <div class="extra-info" id="extra_@messageInfo.ADMessageId" style="display: none;">
                                    <div class="parent" style="display: flex;">
                                        <div class="content" style="flex: 1; border-right: 2px solid black; overflow: hidden;">
                                            @if (messageInfo.MessageContent != "N/A")
                                            {
                                                <br>
                                                @messageInfo.MessageContent
                                                <br>
                                                <button onclick="openContent('@messageInfo.MessageContent')">Open in new window</button>
                                            }
                                            @if (messageInfo.MessageContentXML != "N/A")
                                            {
                                                <pre><code id="xmlContent_@messageInfo.ADMessageId">@messageInfo.MessageContentXML</code></pre>
                                                <br>

                                                @if (messageInfo.MessageContentXML != null)
                                                {
                                                    <button onclick="openXMLContent('@Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(System.Web.HttpUtility.HtmlEncode(messageInfo.MessageContentXML)))')">Open
                                                        in new window</button>
                                                }
                                            }
                                        </div>
                                        <div class="content" style="margin-left: 2px;">
                                            @if (messageInfo.UserProperties != null)
                                            {
                                                foreach (var property in messageInfo.UserProperties)
                                                {
                                                    <p>@property.Key: @property.Value</p>
                                                }
                                            }
                                            else
                                            {
                                                <p>No user properties</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        @if (Model.Output.OutputData != null && Model.Output.OutputData.Count > 0)
        {
            <div>
            <p>Found @Model.Output.OutputData.Count messages</p>
            </div>
        }
        else
        {
            <div>
            <p>No messages found</p>
            </div>
        }
    </div>
</body>

</html>

@section Scripts {
    <script>
        function showOverlay() {
            document.getElementById('overlay').style.display = "block";
        }

        function hideOverlay() {
            document.getElementById('overlay').style.display = "none";
        }

        $('form').submit(function () {
            showOverlay();
            disableInput();
        });

        function openContent(content) {
            var newWindow = window.open("", "_blank");
            newWindow.document.write("<pre>" + content + "</pre>");
        }

        function openXMLContent(encodedContent) {
            var decodedContent = atob(encodedContent);
            var formattedContent = decodedContent.replace(/(?:\r\n|\r|\n)/g, "<br>");
            var newWindow = window.open("", "_blank");
            newWindow.document.write(formattedContent);
        }

        function disableInput() {
            document.getElementById('host').readOnly = true;
            document.getElementById('vpn').readOnly = true;
            document.getElementById('username').readOnly = true;
            document.getElementById('password').readOnly = true;
            document.getElementById('queue').readOnly = true;
            document.getElementById('resetButton').style.display = 'inline-block';
            sessionStorage.setItem('inputsDisabled', 'true');
        }

        function enableInput() {
            document.getElementById('host').readOnly = false;
            document.getElementById('vpn').readOnly = false;
            document.getElementById('username').readOnly = false;
            document.getElementById('password').readOnly = false;
            document.getElementById('queue').readOnly = false;
            document.getElementById('resetButton').style.display = 'none';
            sessionStorage.removeItem('inputsDisabled');
        }

        document.getElementById('resetButton').addEventListener('click', function () {
            enableInput();
            $("#tableBody").empty();
        });

        function checkSessionStotrageAndSetInputState() {
            var inputsDisabled = sessionStorage.getItem('inputsDisabled');
            if (inputsDisabled === 'true') {
                disableInput();
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            checkSessionStotrageAndSetInputState();
        })

        function removeMessage(messageId, queue) {
            if (confirm('Are you sure you want to delete message with ID ' + messageId + '?')) {
                var token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    type: 'DELETE',
                    url: '?handler=RemoveMessage',
                    data: {
                        messageId: messageId,
                        __RequestVerificationToken: token,
                        host: document.getElementById('host').value,
                        vpn: document.getElementById('vpn').value,
                        username: document.getElementById('username').value,
                        password: document.getElementById('password').value,
                        queue: queue,
                    },
                    success: function (data) {
                        alert(data);
                        $("button[type='submit']").click();
                    },
                    error: function (error) {
                        alert("Error: " + error);
                    }
                });
            }
        }
        $(document).ready(function () {
            $(".message-row").click(function () {
                var id = $(this).data('id');
                var content = $("#extra_" + id);
                var icon = $(this).find(".toggle-icon");

                content.slideToggle("slow", function () {
                    if ($(this).is(":visible")) {
                        icon.text("â†“");
                    } else {
                        icon.text("â†’");
                    }
                });
            });
        });


    </script>
}
